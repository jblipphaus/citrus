<?xml version="1.0" encoding="UTF-8"?>
<spring:beans xmlns="http://www.citrusframework.org/schema/testcase" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.citrusframework.org/schema/testcase http://www.citrusframework.org/schema/testcase/citrus-testcase.xsd">
    <testcase name="ScriptVariablesITest">
		<meta-info>
			<author>Jan Lipphaus</author>
			<creationdate>2010-08-19</creationdate>
			<status>FINAL</status>
			<last-updated-by>Jan Lipphaus</last-updated-by>
			<last-updated-on>2010-08-19T17:25:00</last-updated-on>
		</meta-info>
		
        <description>
			This test shows the usage of inline scripts (e.g. groovy) for the creation of variable values.
			The result of the last operation in the script (e.g. return) will be the value for the variable.
		</description>
        <variables>
        	<variable name="var1">
        		<value>
        			<groovy>
        				<![CDATA[
    						a = 4 * 6
    						b = "Citrus"
    						c = "foo"
    						return b
			             ]]>
        			</groovy>
        		</value>
        	</variable>
        	<variable name="var2">
        		<value>
        			<groovy>
        				<![CDATA[
    						a = 4 * 6
    						b = "Citrus"
    						c = "foo"
    						return a
			             ]]>
        			</groovy>
        		</value>
        	</variable>
        	<variable name="var3">
        		<value>
        			<javascript>
        				<![CDATA[
    						a="Hallo"
			             ]]>
        			</javascript>
        		</value>
        	</variable>
        </variables>
        <actions>
            <send with="testMessageSender">
                <message>
                    <data>
                    	<![CDATA[
    						<xml>
    							<message>${var1}</message>
    							<message>${var2}</message>
    							<message>${var3}</message>
    							<message>${var3} ${var1}</message>
    						</xml>
			             ]]>
					</data>
                </message>
                <header>
                	<element name="operation" value="Greetings"/>
                </header>
            </send>
            
            <receive with="testMessageReceiver">
                <message>
                    <data>
						<![CDATA[							
    						<xml>
    							<message>Citrus</message>
    							<message>24</message>
    							<message>Hallo</message>
    							<message>Hallo Citrus</message>
    						</xml>
						]]>	
					</data>
                </message>
                <header>
                	<element name="operation" value="Greetings"/>
                </header>
            </receive>
        </actions>
    </testcase>
</spring:beans>